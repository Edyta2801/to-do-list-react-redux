{"version":3,"sources":["firebase.js","state/todolist.js","components/ToDoList.js","state/auth.js","components/AppBar.js","App.js","store.js","components/Auth/LogInByGoogle.js","components/Auth/Auth.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","database","googleProvider","GoogleAuthProvider","INIT","ADD","DEL","newText","text","type","del","index","initSync","dispatch","getState","state","isUserLoggedIn","ref","concat","user","uid","on","snapshot","obj","val","tasks","Object","entries","map","_ref","_ref2","slicedToArray","key","value","objectSpread","updateAfterRemove","set","todolist","addTask","push","initialState","connect","delTask","taskText","ev","props","react_default","a","createElement","index_es","onChange","fullWidth","placeholder","name","onClick","primary","label","disabled","el","i","arr","primaryText","rightIcon","delete_default","logOut","signOut","AppBar_default","title","onLeftIconButtonClick","open","iconStyleLeft","display","iconElementRight","IconButton_default","close_default","onRightIconButtonClick","App","components_AppBar","components_ToDoList","Component","reducer","combineReducers","arguments","length","undefined","action","filter","task","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","onAuthStateChanged","loggedIn","userUid","timestamp","Date","now","LogInByGoogle","RaisedButton_default","secondary","onLogInHandler","logInByGoogle","signInWithPopup","children","Auth_LogInByGoogle","ReactDOM","render","es","MuiThemeProvider_default","components_Auth_Auth","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.83001a90.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAvGPg_0ivhf98-HztJQtAJy3FVaUN_u2w\",\r\n  authDomain: \"todo-list-a6e8e.firebaseapp.com\",\r\n  databaseURL: \"https://todo-list-a6e8e.firebaseio.com\",\r\n  projectId: \"todo-list-a6e8e\",\r\n  storageBucket: \"todo-list-a6e8e.appspot.com\",\r\n  messagingSenderId: \"16464590013\"\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const auth = firebase.auth()\r\nexport const database = firebase.database()\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\r\n","import { database } from '../firebase'\r\n\r\n\r\nconst INIT = 'todolist/INIT'\r\nconst ADD = 'todolist/ADD'\r\nconst DEL = 'todolist/DEL'\r\nconst NEW_TEXT = 'todolist/NEW_TEXT'\r\n\r\nexport const add = () => ({\r\n    type: ADD,\r\n})\r\nexport const init = (tasks) => ({\r\n    type: INIT,\r\n    tasks\r\n})\r\nexport const newText = (text) => ({\r\n    type: NEW_TEXT,\r\n    text\r\n})\r\n\r\nexport const del = (index) => ({\r\n    type: DEL,\r\n    index\r\n})\r\n\r\nconst mapObjectToArray = (obj) => (\r\n    Object.entries(obj || {})\r\n        .map(([key, value]) => (\r\n            typeof value === 'object' ?\r\n                { ...value, key }\r\n                :\r\n                { key, value }\r\n        ))\r\n)\r\n\r\n// export const initSync = () => (dispatch, getState) => {\r\n//     const state = getState()\r\n//     state.auth.isUserLoggedIn === true ? database.ref(`users/${state.auth.user.uid}/tasks`).on(\r\n//         'value',\r\n//         (snapshot) => dispatch(\r\n//             init(\r\n//                 mapObjectToArray(snapshot.val())\r\n//             )\r\n//         )\r\n//     ) : false\r\n// }\r\nexport const initSync = () => (dispatch, getState) => {\r\n    const state = getState()\r\n\r\n    if (state.auth.isUserLoggedIn === true) {\r\n        database.ref(`users/${state.auth.user.uid}/tasks`).on(\r\n            'value',\r\n            (snapshot) => dispatch(\r\n                init(\r\n                    mapObjectToArray(snapshot.val())\r\n                )))\r\n    }\r\n    // else{\r\n    //     alert('nieporawne logowanie')\r\n    // }\r\n\r\n}\r\n\r\n\r\nexport const updateAfterRemove = () => (dispatch, getState) => {\r\n    const state = getState()\r\n    database.ref(`users/${state.auth.user.uid}/tasks`).set(\r\n        state.todolist.tasks\r\n    )\r\n}\r\n\r\n\r\nexport const addTask = () => (dispatch, getState) => {\r\n    const state = getState()\r\n    database.ref(`users/${state.auth.user.uid}/tasks`).push({\r\n        text: state.todolist.text\r\n    })\r\n}\r\n\r\n\r\nconst initialState = {\r\n    tasks: [{\r\n        text: '',\r\n        key: '',\r\n    }],\r\n    text: '',\r\n\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                text: '',\r\n                tasks: state.tasks.concat({ text: state.text })\r\n            }\r\n        case INIT:\r\n            return {\r\n                text: '',\r\n                tasks: action.tasks\r\n            }\r\n        case DEL:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter((task, index) => index !== action.index)\r\n            }\r\n        case NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {TextField, RaisedButton, MenuItem, } from 'material-ui'\r\nimport Delete from 'material-ui/svg-icons/action/delete'\r\n\r\nimport  { addTask, updateAfterRemove, del, newText} from '../state/todolist'\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                onChange={props.taskText}\r\n                value={props.text}\r\n                fullWidth={true}\r\n                placeholder={'New Task'}\r\n                name={'new-task'}\r\n\r\n\r\n            />\r\n            <RaisedButton\r\n                onClick={props.addTask}\r\n                primary={true}\r\n                label={'Add task'}\r\n                fullWidth={true}\r\n                disabled={props.text ? false : true}\r\n            />\r\n\r\n\r\n\r\n            {props.tasks.map((el, i, arr) => (\r\n            <MenuItem primaryText={el.text} rightIcon={<Delete\r\n                onClick={() =>props.delTask(i)}\r\n            />}\r\n            /> ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        text: state.todolist.text,\r\n        tasks: state.todolist.tasks\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        // changeToCompleted: dispatch(changeToCompleted()),\r\n        delTask: (index) => {\r\n            dispatch(del(index))\r\n            dispatch(updateAfterRemove())\r\n        },\r\n        addTask: () => dispatch(addTask()),\r\n        taskText: (ev, val) => dispatch(newText(val)),\r\n        updateAfterRemove: () => dispatch(updateAfterRemove())\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ToDoList);\r\n","import {auth, database, googleProvider} from \"../firebase\";\r\nimport {initSync} from \"./todolist\";\r\n\r\nconst LOGGED_IN = 'auth/LOGGED_IN'\r\nconst LOGGED_OUT = 'auth/LOGGED_OUT'\r\n\r\nexport const loggedIn = (user) => ({type: LOGGED_IN, user})\r\nexport const loggedOut = () => ({type: LOGGED_OUT})\r\n\r\n\r\nconst initialState = {\r\n    isUserLoggedIn: false, \r\n    user: null\r\n}\r\n\r\n\r\nexport const logUserLogIn = () => (dispatch, getState) => {\r\n    \r\n    const userUid = getState().auth.user.uid\r\n\r\n    database.ref(`/users/${userUid}/loginsLogs`)\r\n        .push({\r\n            timestamp: Date.now()\r\n        })\r\n}\r\n\r\n\r\nexport const initAuthUserSync = () => (dispatch, getState) => {\r\n    auth.onAuthStateChanged(\r\n        user => {\r\n            if (user) {\r\n                dispatch(loggedIn(user))\r\n                dispatch(logUserLogIn())\r\n                dispatch(initSync())\r\n            } else {\r\n                dispatch(loggedOut())\r\n            }\r\n        }\r\n    )\r\n}\r\nexport const logInByGoogle = () => (dispatch, getState) => {\r\n    auth.signInWithPopup(googleProvider)\r\n}\r\n\r\nexport const logOut = () => (dispatch, getState) => {\r\n    auth.signOut()\r\n}\r\n\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGGED_IN:\r\n            return {\r\n                ...state,\r\n                isUserLoggedIn: true,\r\n                user: action.user\r\n            }\r\n        case LOGGED_OUT:\r\n            return {\r\n                ...state,\r\n                isUserLoggedIn: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport MuiAppBar from 'material-ui/AppBar'\r\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport {logOut} from \"../state/auth\";\r\n\r\nconst AppBar = (props) => {\r\n    return (\r\n        <div>\r\n            <MuiAppBar\r\n                title={'TO DO! '}\r\n                onLeftIconButtonClick={props.open}\r\n                iconStyleLeft={{display: 'none'}}\r\n                iconElementRight={<IconButton><NavigationClose/></IconButton>}\r\n                onRightIconButtonClick={props.logOut}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logOut: () => dispatch(logOut())\r\n    }\r\n\r\n    };\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppBar);","import React, {Component} from 'react';\nimport ToDoList from './components/ToDoList'\nimport AppBar from './components/AppBar'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <AppBar/>\n                <ToDoList/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport todolist, { initSync } from './state/todolist'\r\nimport auth, { initAuthUserSync } from \"./state/auth\";\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    todolist\r\n\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n\r\n    )\r\n)\r\n\r\nstore.dispatch(initSync())\r\nstore.dispatch(initAuthUserSync())\r\n\r\n","import React from 'react'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n const LogInByGoogle = (props) => (\r\n    <div>\r\n        <RaisedButton\r\n            label={'Log in by Google!'}\r\n            secondary={true}\r\n            onClick={props.onLogInHandler}\r\n        />\r\n    </div>\r\n)\r\n export default LogInByGoogle\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { logInByGoogle } from '../../state/auth'\r\nimport LogInByGoogle from \"./LogInByGoogle\"\r\n\r\nconst Auth = (props) => (\r\n    <div>\r\n        {\r\n            props.isUserLoggedIn ?\r\n                props.children\r\n                :\r\n                <LogInByGoogle\r\n                    onLogInHandler={props.logInByGoogle}\r\n                />\r\n        }\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isUserLoggedIn: state.auth.isUserLoggedIn\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logInByGoogle: () => dispatch(logInByGoogle())\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Auth)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './store'\nimport MultiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport {Provider} from 'react-redux'\nimport Auth from './components/Auth'\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <MultiThemeProvider>\n            <Auth>\n                <App/>\n            </Auth>\n\n        </MultiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}